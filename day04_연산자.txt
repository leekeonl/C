#include <stdio.h>

void main( ) {
	/*
	산술연산자
		연산자1 = 연산자2 : 연산자2에 있는 값을 연산자1에 대입한다
		연산자1 + 연산자2 : 두 연산자의 값을 더한다
		연산자1 - 연산자2 : 연산자1의 값에서 연산자2의 값을 빼준다
		연산자1 * 연산자2 : 두 연산자의 값을 곱한다
		연산자1 / 연산자2 : 연산자1의 값을 연산자2의 값으로 나눈다
		연산자1 % 연산자2 : 연산자1의 값을 연산자2의 값으로 나누고 남은 나머지 값
		                    Ex ) 짝홀수 구분, 배수 구분

	관계연산자
		1. 두 개의 연산자 간의 대소관계 비교
		2. 비교값이 거짓이면 결과 값은 0, 참이면 결과값은 1
		3. 값이 거짓 0이외의 모든 수는 참을 의미
		관계 연산자	예	설명					결과
		>		a>b	a가 b보다 큰지를 비교			1(참),0(거짓)
		<		a<b	a가 b보다 작은지를 비교			1(참),0(거짓)
		>=		a>=b	a가 b보다 크거나 같은지를 비교		1(참),0(거짓)
		<=		a<=b	a가 b보다 작거나 같은지를 비교		1(참),0(거짓)
		==		a==b	a가 b와 같은지를 비교			1(참),0(거짓)
		!=		a!=b	a가 b와 같지 않은지를 비교		1(참),0(거짓)

	복합 대입 연산자
		복합대입연산자		사용 예		의미
		a=a+b			a+=b		a+b를 먼저 수행한 후에 a에 값을 저장
		a=a-b			a-=b		a-b를 먼저 수행한 후에 a에 값을 저장
		a=a*b			a*=b		a*b를 먼저 수행한 후에 a에 값을 저장
		a=a/b			a/=b		a/b를 먼저 수행한 후에 a에 값을 저장
		a=a%b			a%=b		a%b를 먼저 수행한 후에 a에 값을 저장

	논리 연산자
		&& : 이름은 AND 연산자, 의미는 논리곱
			 && 연산자의 결과는 피연산자가 모두 1(참)일때만 1(참)이다.
				피연산자     연산자	피연산자	결과
				0	     &&	        0		0
				0	     &&		1		0
				1            &&		0		0
				1	     &&		1		1

		|| : 이름은 OR 연산자, 의미는 논리합
			 || 연산자의 결과는 피연산자 둘 중에 하나가 1(참)이면 1(참)이다
				피연산자     연산자	피연산자	결과
				0	     ||  	0		0
				0	     ||	        1		1
				1	     ||	        0		1
				1	     ||	        1		1

		! : 이름은 NOT 연산자, 의미는 논리 부정
			!연산자의 결과는 피연산자가 1(참)이면 0(거짓)이고, 0(거짓)이면 1(참)이다.
			 	연산자	     연산자	결과
				!	     0		1
				!	     1		0
	*/

	/*
	//자릿수 구분
	int a = 156;
	int il, sib, baek;

	il = 156%10;
	sib = (a/10)%10;
	baek = a/100;

	printf("il = %d, sib = %d, baek=%d\n", il,sib,baek);
	*/

	/*
	//산술 연산자
	int su1 = 20, su2 = 3;	

	printf("%d + %d = %d\n",  su1, su2, su1 + su2);	//23
	printf("%d - %d = %d\n",  su1, su2, su1 - su2);	//17
	printf("%d * %d = %d\n",  su1, su2, su1 * su2);	//60	
	printf("%d / %d = %d\n",  su1, su2, su1 / su2);	//6
	printf("%d %% %d = %d\n", su1, su2, su1 % su2);	//2
	*/

	/*
	//관계 연산자 
	double su1 = 3.01, su2 = 3.0;	

	printf("변수 su1과 su2의 크기 비교 결과 : %d\n", su1 <= su2);	//0
	printf("변수 su1과 su2의 크기 비교 결과 : %d\n", su1 >= su2);	//1
	printf("변수 su1과 su2의 크기 비교 결과 : %d\n", su1 == su2);	//0
	printf("변수 su1과 su2의 크기 비교 결과 : %d\n", su1 != su2);	//1
	*/

	/*
	//복합 대입 연산자
	int su1, su2;

	su1 = su2 = 5;

	printf("su1 + 1 = %d\n", su1 += 1);		//6
	printf("su1 - 1 = %d\n", su1 -= 1);		//5
	printf("su1 * su2 = %d\n", su1 *= su2);		//25
	printf("su1 / su2 = %d\n", su1 /= su2);		//5
	printf("su1 %% su2 = %d\n", su1 %= su2);	//0
	*/

	/*
	//논리 연산자
	int num1 = 10;
	int num2 = 20;
	int result1, result2, result3;

	result1 = (num1 == 10 && num2 == 12);
	result2 = (num1 < 10 || num2 > 12 );
	result3 = (!num1);

	printf("result1 = %d\n", result1);	//0
	printf("result2 = %d\n", result2);	//1
	printf("result3 = %d\n", result3);	//0 -> 0이 아니면 모두 참, ! == 부정
	*/

	/*
	//증감 연산자
	int  num1 = 12;
	int  num2 = 12;

	//++num1;
	//num2++;

	printf("num1   : %d \n", num1);		//12
	printf("num1++ : %d \n", num1++);	//12 -> 후위 증가
	printf("num1   : %d \n\n", num1);	//13

	printf("num2   : %d \n", num2);		//12
	printf("++num2 : %d \n", ++num2);	//13 ->전위 증가
	printf("num2   : %d \n\n", num2);	//13

	num1 = 10;
	num2 = (num1--) + 2;

	printf("num1: %d \n", num1);	//9 
	printf("num2: %d \n", num2);	//12 -> 후위니까 10+2 먼저
	*/

	/*
	//기타 연산자 sizeof( ) : 데이터의 크기를 byte단위로 표기
	int su1 = 123;	
	char ch = 'a';	
	float su2 = 12.345;

	printf("변수 su1의 크기        : %d byte\n",sizeof(su1));	//4
	printf("문자형 자료형의 크기   : %d byte\n",sizeof(char));	//1
	printf("수식(su1+su2)의 크기   : %d byte\n",sizeof(su1+su2));	//4	
	printf("실수 1.23456 의 크기   : %d byte\n",sizeof(1.23456));	//8
	printf("문자형 상수 'a'의 크기 : %d byte\n",sizeof('a'));	//4
	*/

	/*
   	float su1  = 123.456;
   	float su2  = 12.3456789;
   	double su3 = 1.23456789;

   	printf("su1 = %f\n", su1);	
   	printf("su2 = %11.8f\n", su2);
   	printf("su1 = %6.2f\n", su1);
   	printf("su3 = %11.8f\n", su3);
   	printf("su3 = %-11.8lf\n", su3);
   	*/
	

}