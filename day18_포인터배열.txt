#include <stdio.h>

void main(){

/*
포인터와 1차원 배열
: 배열 변수이름은 그 배열의 시작 주소를 의미한다. 
  포인터는 주소를 받아들이므로 포인터에서 배열에 접근하여 사용할 수 있다.
① 1차원 배열에서는 배열 이름이 0번째 요소의 시작 주소를 의미한다.
   배열명 = &배열명[0]
② 1차원 배열에서 첨자는 상대 번지를 의미한다.
   배열명[첨자] = *(배열명 + 첨자)
③ 1차원 배열에서 “배열이름 + 첨자”를 하게 되면 “첨자 * 자료형”의 크기만큼 증가하게 된다.
④ 형식 : 주소 == 배열명 + 첨자
                  &배열명[첨자]
            값 == *(배열명 + 첨자)
                   배열명[첨자]

ex ) int a[3] = { 10, 20, 30 ]
     int *p = a;
		  
		  배열의 값 표현	p[0], a[0]        p[1], a[1]          p[2], a[2]
					  *p, *a	*(P+1), *(a+1)	    *(p+2), *(a+1)
     				   --------------------------------------------------------- 	
		     배열 데이터     |        10        |        20        |        30        |
				   ---------------------------------------------------------
		          메모리  100	             104	        108	
		배열의 주소 표현     &a[0]	            &a[1]              &a[2]
                                   p	             p+1                p+2
				   a		     a+1		a+2  
*/

//----------------------------------------------------------------------

	// 포인터의 대상 배열 접근
	/*
	int  a[5]={10, 20, 30, 40, 50};
	int  *pta  =  a;							

	printf(“ pta + 0 = %d \n”,  *(pta +0) );
	printf(“ pta + 1 = %d \n”,  *(pta +1) );	//값을돌려준다
	printf(“ pta + 2 = %d \n”,  *(pta +2) );	
	printf(“ pta + 3 = %d \n”,  *(pta +3) );	
	printf(“ pta + 4 = %d \n”,  *(pta +4) );	
	*/	

	/*
	int  a[5]={10, 20, 30, 40, 50};
	int  *pta  =  a;							

	printf("pta + 0 = %d \n",  pta[0] ); // 주소를 준다
	printf("pta + 1 = %d \n",  pta[1] );	
	printf("pta + 2 = %d \n",  pta[2] );	
	printf("pta + 3 = %d \n",  pta[3] );	
	printf("pta + 4 = %d \n",  pta[4] );
	*/

//----------------------------------------------------------------------

	// scanf() 이용
	/*
	int a[3];		
	int *pta = a;

	printf("정수 입력 : ");		scanf("%d", pta );
	printf("정수 입력 : ");		scanf("%d", pta+1 );
	printf("정수 입력 : ");		scanf("%d", pta+2 ); // &* 끼리없앤다

	printf("pta + 0 = %d \n",  pta[0] );	
	printf("pta + 1 = %d \n",  pta[1] );	
	printf("pta + 2 = %d \n",  pta[2] );	
	*/

	/*
	int  a[5]={1,2,3,4,5};	   int  *p;
	p = a;
	printf("배열 주소 =  %d, 포인터   *(p+0) = %d,   \n", p,  *p );	
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  p+0, *(p+0)  );
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  p+1, *(p+1)  );	
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  p+2, *(p+2)  );

	printf("배열 주소 =  %d, 포인터   *(p+0) = %d,   \n", p,  *p );	
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  a+0, *(a+0)  );
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  a+1, *(a+1)  );	
	printf("배열 주소 =  %d, 배열의 값 == %d  \n",  a+2, *(a+2)  );
	//배열명은 시작주소를 의미하므로, 포인터와 같이 *를 사용할 수 있다.
	*/

//=================================================================================

/*
포인터와 2차원 배열
① 2차원배열에서는 행 이름이 해당 행의 시작주소를 의미한다.
   배열명[0] = &배열명[0][0]
   배열명[1] = &배열명[1][0]
② 2차원 배열에서 행의 이름은 기준 번지를 열은 상대번지를 의미한다.
   배열명[행][열] = *(배열명[행]+열)
③ 행 이름에 n번지 증가시키면 (요소 1개 크기 *n) 바이트 만큼의 번지가 증가된다.
   배열명[행] + n번지 = 배열명[행] + (n * 요소1개의 크기만큼의 바이트)
④ 2차원 배열에서 배열 이름에 n번지 증가시키면 “n * 한행의 바이트 수”만큼의 번지
   증가된다.
   배열명 + n번지 = 배열명 + n * 한행의 바이트 수
⑤ 형식 : 주소 == *(배열명 + 행) + 열
                      변수명[행] + 열
                     &변수명[행]  [열]

	    값 == *(*(배열명 + 행) + 열)
		       *변수명[행] + 열
		        변수명[행]  [열]
*/

	// 포인터와 2차원 배열 선언과 접근
	/*
	int a[3][2] = { {10,11}, {20,21}, {30, 31} };
	int (*pta)[2];
	
	pta = a;
	       
	printf(“%d \n”, *(pta[1]) );
	printf(“%d \n”, *(pta[1]+1));
	*/

//=================================================================================

/*
포인터 배열 
: 포인터 변수도 변수임으로 배열로 만들 수 있다. 
  포인터 변수를 배열로 만들면 배열의 원소 하나하나가 포인터 변수가 된다.
*/
	//포인터 배열 선언 및 접근
	/*
	int a=10, b=20, c=30;
	char ca='o', cb='k', cc='!';
	int *pta[3];
	char *ptb[3];

	pta[0] = &a;
	pta[1] = &b;
	pta[2] = &c;
	ptb[0] = &ca;
	ptb[1] = &cb;
	ptb[2] = &cc;

	printf("*pta[0] : %d \n", *pta[0]);
	printf("*pta[1] : %d \n", *pta[1]);
	printf("*pta[2] : %d \n", *pta[2]);

	printf("*ptb[0] : %c \n", *ptb[0]);
	printf("*ptb[1] : %c \n", *ptb[1]);
	printf("*ptb[2] : %c \n", *ptb[2]);
	*/

	//포인터 배열을 이용한 연산
	/*
	int   a=10,   b=20,   c=30;
	int   *pta[3];
	int   sum=0;

	pta[0] = &a;	pta[1] = &b;		pta[2] = &c;
	
	sum = *pta[0] + *pta[1] + *pta[2];
		
	printf("총 합 : %d \n", sum);
	*/

}











